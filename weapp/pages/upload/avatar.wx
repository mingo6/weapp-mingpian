<template>
	<view>
		<import src="../../static/libs/we-cropper/we-cropper.wxml" />
		<view class="cropper-wrapper">
			<template is="we-cropper" data="{{...cropperOpt}}" />
			<view class="cropper-buttons">
				<view class="upload" bindtap="uploadTap">
					重新选择
				</view>
				<view class="getCropperImage" bindtap="getCropperImage">
					确定
				</view>
			</view>
		</view>
	</view>
</template>
<script>
import WeCropper from "../../static/libs/we-cropper/we-cropper.js";
const device = wx.getSystemInfoSync()
const width = device.windowWidth
const height = device.windowHeight - 50
export default {
	config: {
		"backgroundTextStyle": "dark",
		"navigationBarBackgroundColor": "#000",
		"navigationBarTitleText": "裁剪头像",
		"navigationBarTextStyle": "#fff"
	},
	data: {
		cropperOpt: {
			id: 'cropper',
			width,
			height,
			scale: 2.5,
			zoom: 8,
			cut: {
				x: (width - 300) / 2,
				y: (height - 300) / 2,
				width: 300,
				height: 300
			}
		}
	},
	touchStart(e) {
		this.wecropper.touchStart(e)
	},
	touchMove(e) {
		this.wecropper.touchMove(e)
	},
	touchEnd(e) {
		this.wecropper.touchEnd(e)
	},
	getCropperImage() {
		this.wecropper.getCropperImage((avatar) => {
			console.log('avatar', avatar);
			if (avatar) {
				var pages = getCurrentPages();
				console.log('pages', pages);
		        var currPage = pages[pages.length - 1];
		        var prevPage = pages[pages.length - 2];
		        prevPage.setData({
		            avatar: avatar
		        });
        		wx.navigateBack();
			} else {
				console.log('获取图片失败，请稍后重试');
			}
		})
	},
	uploadTap() {
		const self = this

		wx.chooseImage({
			count: 1, // 默认9
			sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
			sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
			success(res) {
				const src = res.tempFilePaths[0]
				//  获取裁剪图片资源后，给data添加src属性及其值
				self.wecropper.pushOrign(src)
			}
		})
	},
	onLoad(option) {
		const { cropperOpt } = this.data
		if (option.src) {
			cropperOpt.src = option.src
			new WeCropper(cropperOpt)
				.on('ready', (ctx) => {
					console.log(`wecropper is ready for work!`)
				})
				.on('beforeImageLoad', (ctx) => {
					console.log(`before picture loaded, i can do something`)
					console.log(`current canvas context:`, ctx)
					wx.showToast({
						title: '上传中',
						icon: 'loading',
						duration: 20000
					})
				})
				.on('imageLoad', (ctx) => {
					console.log(`picture loaded`)
					console.log(`current canvas context:`, ctx)
					wx.hideToast()
				})
				.on('beforeDraw', (ctx, instance) => {
					console.log(`before canvas draw,i can do something`)
					console.log(`current canvas context:`, ctx)
				})
				.updateCanvas()
		}
	}
}

</script>
<style lang="less">
.cropper {
	position: absolute;
	top: 0;
	left: 0;
}

.cropper-buttons {
	background-color: rgba(0, 0, 0, 0.95);
	color: #04b00f;
}
.cropper-wrapper {
    // position: relative;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    justify-content: center;
    height: 100%;
    background-color: #e5e5e5;
}

.cropper-buttons {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    justify-content: center;
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 50px;
    line-height: 50px;
}

.cropper-buttons .upload,
.cropper-buttons .getCropperImage {
    width: 50%;
    text-align: center;
}

.cropper {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1000;
}

.cropper-buttons {
    background-color: rgba(0, 0, 0, 0.95);
    color: #04b00f;
}

.cropper-wrapper {
    background: #000;
}
</style>
